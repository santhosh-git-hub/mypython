def CONTAINER_NAME="python-prj"
def CONATAINER_TAG="latest"
def DOCKER_HUB_USER="santhosh-doc-hub"
def HTTP_PORT="1010"

node {
    stage ('Checkout') {
        checkout scm
    }

    stage ('Image Prune') {
       // imagePrune(CONTAINER_NAME)
    }

    stage ('Image Build') {
        imageBuild(CONATAINER_NAME,CONTAINER_TAG)
    }

    stage ('Push to Docker Registry') {
        withCredential([usernamePassword(credntialsID: 'dockerHubAccount', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')])
        pushToImage(CONTAINER_NAME, CONTAINER_TAG, USERNAME, PASSWORD)
    }

    stage (Run App) {
        runApp(CONTAINER_NAME,CONTAINER_TAG,DOCKER_HUB_USER,HTTP_PORT)
    }
}


def imagePrune(containerName){
    try {
        sh "docker image prune -f"
        sh "docker stop $containerName"
    } catch(error) {}
}

def imageBuild(containerName,tag){
    sh "docker build -t $containerName:$tag -t containerName --pull --no-cache ."
    echo "Image build complete"
}

def pushImage(containerName,tag,dockerUser,dockerPassword){
    sh "docker login -u $dockerUser -p $dockerPassword"
    sh "docker tag $containerName:$tag $dokcerUser/$containerName:$tag"
    sh "docker push $dokceruser/$contianerName:$tag"
    echo "Image push complete"
}

def runApp(containerName, tag, dockerHubUser, httpPort){
    sh "docker pull $dockerHubUser/$contianerName"
    sh "docker run -d --rm -p $httpPort:$httpPort --name $containerName $dockerHubUser/$containerName:$tag"
    echo "Application started on port ${httpPort} (http)"
}
